import pandas as pd
import numpy as np
import matplotlib as plt
import chaospy as cp
import random
%matplotlib inline

# Define the residues A
B9 = []
for n in range(1,10):
    def A(n):
        return [(2**(j))/(2**n-1) for j in range(n)]
    B9.append(A(n))
C9 = np.array(B9)
D9 = np.insert(C9[0], [0, 0, 0, 0, 0, 0, 0, 0], 0)
E9 = np.insert(C9[1], [0, 0, 0, 0, 0, 0, 0], 0)
F9 = np.insert(C9[2], [0, 0, 0, 0, 0, 0], 0)
G9 = np.insert(C9[3], [0, 0, 0, 0, 0], 0)
H9 = np.insert(C9[4], [0, 0, 0, 0], 0)
I9 = np.insert(C9[5], [0, 0, 0], 0)
J9 = np.insert(C9[6], [0, 0], 0)
K9 = np.insert(C9[7], [0], 0)
L9 = np.array(C9[8])
M9 = (D9, E9, F9, G9, H9, I9, J9, K9, L9)

B8 = []
for n in range(1,9):
    def A(n):
        return [(2**(j))/(2**n-1) for j in range(n)]
    B8.append(A(n))
C8 = np.array(B8)
D8 = np.insert(C8[0], [0, 0, 0, 0, 0, 0, 0], 0)
E8 = np.insert(C8[1], [0, 0, 0, 0, 0, 0], 0)
F8 = np.insert(C8[2], [0, 0, 0, 0, 0], 0)
G8 = np.insert(C8[3], [0, 0, 0, 0], 0)
H8 = np.insert(C8[4], [0, 0, 0], 0)
I8 = np.insert(C8[5], [0, 0], 0)
J8 = np.insert(C8[6], [0], 0)
K8 = np.array(C8[7])
L8 = (D8, E8, F8, G8, H8, I8, J8, K8)
Q8 = random.choice(L8)

B7 = []
for n in range(1,8):
    def A(n):
        return [(2**(j))/(2**n-1) for j in range(n)]
    B7.append(A(n))
C7 = np.array(B7)
D7 = np.insert(C7[0], [0, 0, 0, 0, 0, 0], 0)
E7 = np.insert(C7[1], [0, 0, 0, 0, 0], 0)
F7 = np.insert(C7[2], [0, 0, 0, 0], 0)
G7 = np.insert(C7[3], [0, 0, 0], 0)
H7 = np.insert(C7[4], [0, 0], 0)
I7 = np.insert(C7[5], [0], 0)
J7 = np.array(C7[6])
K7 = (D7, E7, F7, G7, H7, I7, J7)
Q7 = random.choice(K7)

B6 = []
for n in range(1,7):
    def A(n):
        return [(2**(j))/(2**n-1) for j in range(n)]
    B6.append(A(n))
C6 = np.array(B6)
D6 = np.insert(C6[0], [0, 0, 0, 0, 0], 0)
E6 = np.insert(C6[1], [0, 0, 0, 0], 0)
F6 = np.insert(C6[2], [0, 0, 0], 0)
G6 = np.insert(C6[3], [0, 0], 0)
H6 = np.insert(C6[4], [0], 0)
I6 = np.array(C6[5])
J6 = (D6, E6, F6, G6, H6, I6)
Q6 = random.choice(J6)

B5 = []
for n in range(1,6):
    def A(n):
        return [(2**(j))/(2**n-1) for j in range(n)]
    B5.append(A(n))
C5 = np.array(B5)
D5 = np.insert(C5[0], [0, 0, 0, 0], 0)
E5 = np.insert(C5[1], [0, 0, 0], 0)
F5 = np.insert(C5[2], [0, 0], 0)
G5 = np.insert(C5[3], [0], 0)
H5 = np.array(C5[4])
I5 = (D5, E5, F5, G5, H5)
Q5 = random.choice(I5)

B4 = []
for n in range(1,5):
    def A(n):
        return [(2**(j))/(2**n-1) for j in range(n)]
    B4.append(A(n))
C4 = np.array(B4)
D4 = np.insert(C4[0], [0, 0, 0], 0)
E4 = np.insert(C4[1], [0, 0], 0)
F4 = np.insert(C4[2], [0], 0)
G4 = np.array(C4[3])
H4 = (D4, E4, F4, G4)
Q4 = random.choice(H4)

B3 = []
for n in range(1,4):
    def A(n):
        return [(2**(j))/(2**n-1) for j in range(n)]
    B3.append(A(n))
C3 = np.array(B3)
D3 = np.insert(C3[0], [0, 0], 0)
E3 = np.insert(C3[1], [0], 0)
F3 = np.array(C3[2])
G3 = (D3, E3, F3)
Q3 = random.choice(G3)

B2 = []
for n in range(1,3):
    def A(n):
        return [(2**(j))/(2**n-1) for j in range(n)]
    B2.append(A(n))
C2 = np.array(B2)
D2 = np.insert(C2[0], [0], 0)
E2 = np.array(C2[1])
F2 = (D2, E2)
Q2 = random.choice(F2)

B1 = []
for n in range(1,2):
    def A(n):
        return [(2**(j))/(2**n-1) for j in range(n)]
    B1.append(A(n))

mu = np.random

Q9 = random.choice(M9)
Q8 = random.choice(L8)
Q7 = random.choice(K7)
Q6 = random.choice(J6)
Q5 = random.choice(I5)
Q4 = random.choice(H4)
Q3 = random.choice(G3)
Q2 = random.choice(F2)

print(Q9, Q8, Q7, Q6, Q5, Q4, Q3, Q2)